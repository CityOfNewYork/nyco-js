// /**
//  * Dependencies
//  */

// const Path = require('path');
// const fs = require('fs');
// const jsSass = require(`${process.env.PWD}/node_modules/json-sass/lib/jsToSassString`);
// const variables = require(`${process.env.PWD}/config/variables`);
// const alerts = require(`${process.env.PWD}/config/alerts`);

// /**
//  * Constants
//  */

// const prefix = '$variables';
// const data = jsSass(variables);
// const dir = Path.join(process.env.PWD, 'src/config/');
// const filename = '_variables.scss';

// /**
//  * Init
//  */

// let message = [
//   '// Do not edit this file, variables are set in config/variables.js.',
//   '// To change, edit the config/variables.js and run `npm run variables`.',
//   '// To use these variables, import into the component as a dependency',
//   '// and use `$set: map-get($variables, {set}); $var: map-get($set, {var})`.',
//   '\n'
// ].join('\n');

// fs.writeFile(`${dir}${filename}`, `${message}${prefix}: ${data};`, err => {
//   if (err) {
//     console.log(`${alerts.error} ${err}`);
//     return;
//   }
//   console.log(`${alerts.success} Variables compiled to ${dir}${filename}`);
// });
const shell = require('shelljs');


const nodemon = require('nodemon');
const path = require('path');
const args = process.argv.slice(2);
const alerts = require(`${process.env.PWD}/config/alerts`);

const input = './config/variables.js';
const output = './src/config/_variables.scss';

shell.config.silent = true;

if (args.includes('-w') || args.includes('--watch')) {
  nodemon('-e js --watch config/variables.js -x node scripts/variables.js');
} else {
  shell.exec(`npx json-to-scss ${input} ${output} --p='$variables:'`, (code, stdout, stderr) => {
    if (code) {
      console.log(`${alerts.error} "variables" failed: ${stderr}`);
      process.exit(1);
    } else {
      console.log(`${alerts.scripts} Created ${output} from ${input}`);
    }
  });
}